rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
View(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
install.packages("r2d2")
install.packages("r2d3")
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_within(Riverina_contour)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#  geom_sf(data=creeks,colour="blue",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="blue",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
View(Riverina)
Sunraysia <- get_region("Sunraysia") %>% load_map(aggregation=c("LGA","State","Region"))
Sunraysia_contour <- Sunraysia %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
sunraysia_bbox <- st_bbox(Sunraysia)
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
ggplot() +
geom_sf(data=Sunraysia_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia_contour, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
meb_size <- melb_housing %>% group_by(Suburb) %>% summarise(Landsize=mean(Landsize,na.rm=TRUE),.groups="drop")
View(meb_size)
View(melb_housing)
View(meb_size)
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) >%%
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) %>%
left_join(mebsize,by=c("LOCALITY"="Suburb"))
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
ggplot() +
geom_sf(data=Melbourne, aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()+
#theme(legend.position = "none") +
ggplot() +
geom_sf(data=Melbourne, aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
Melbourne %>% ggplot() +
geom_sf(aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY,Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
View(Melbourne)
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
View(melb_housing)
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
melb_size <- melb_housing %>% filer(type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
melb_size <- melb_housing %>% filter(type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
melb_size <- melb_housing %>% filter(Type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right")
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical")
#load packages
if(!require(librarian)) install.packages("librarian")
librarian::shelf("tidyverse","sf","carlosyanez/aussiemaps","carlosyanez/customthemes","
osmdata","paletteer","openscilabs/ochRe","devtools")
locations.table
colnames(locations.table)
melb_inner1 <- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3)) %>%
load_map(aggregation = "LGA")
melb_inner1.centroid <- st_centroid(melb_inner1)
melb_inner2 <- tibble(LOCALITY=c("South Yarra"),State=c("VIC")) %>%
load_map()
melb_inner3 <- tibble(POA_CODE16=c("3004"),State=c("VIC")) %>%
load_map()
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="grey",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="grey",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_fill_ochre("lorikeet") +
custom_map_theme()
melb_inner1 <- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3)) %>%
load_map(aggregation = "LGA")
melb_inner1.centroid <- st_centroid(melb_inner1)
melb_inner2 <- tibble(LOCALITY=c("South Yarra"),State=c("VIC")) %>%
load_map()
melb_inner3 <- tibble(POA_CODE16=c("3004"),State=c("VIC")) %>%
load_map()
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="white",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="white",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_fill_ochre("lorikeet") +
custom_map_theme()
Sunraysia <- get_region("Sunraysia") %>% load_map(aggregation=c("LGA","State","Region"))
Sunraysia_contour <- Sunraysia %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
sunraysia_bbox <- st_bbox(Sunraysia)
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
Sunraysia <- get_region("Sunraysia") %>% load_map(aggregation=c("LGA","State","Region"))
Sunraysia_contour <- Sunraysia %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
sunraysia_bbox <- st_bbox(Sunraysia)
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
melb_size <- melb_housing %>% filter(Type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_ochre()
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_alpha_continuous()
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_gradient2()
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_gradient2() +
labs(title="Median House Price in Melbourne's Housing Kaggle Dataset")
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","creeks")) %>%
osmdata_sf()
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","creeks")) %>%
osmdata_sf()
View(rivers)
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
View(rivers)
View(rivers)
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
Sunraysia <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State","Region"))
Sunraysia_contour <- Sunraysia %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
sunraysia_bbox <- st_bbox(Sunraysia)
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","creeks")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia, aes(fill=LGA), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia, aes(fill=LGA), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()  +
labs(title="Rivers in the Riverina")
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_gradient2(name="Median Price") +
labs(title="Median House Price in Melbourne's Housing Kaggle Dataset")
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_gradient2(name="Median Price",labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(title="Median House Price in Melbourne's Housing Kaggle Dataset")
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="white",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="white",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_fill_ochre("lorikeet") +
custom_map_theme() +
labs(title="Arbitrary selection of South Yarra and Postal Area 3004", caption="Sources:data.gov.au, ABS")
melb_inner1_filter<- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3))
melb_inner1 <-  load_map(melb_inner1,aggregation = "LGA")
melb_inner1_filter<- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3))
melb_inner1 <-  load_map(melb_inner1_flter,aggregation = "LGA")
melb_inner1_filter<- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3))
melb_inner1 <-  load_map(melb_inner1_filter,aggregation = "LGA")
melb_inner1.centroid <- st_centroid(melb_inner1)
#works wiht pipes too
melb_inner2 <- tibble(LOCALITY=c("South Yarra"),State=c("VIC")) %>%
load_map()
melb_inner3 <- tibble(POA_CODE16=c("3004"),State=c("VIC")) %>%
load_map()
p <- ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="white",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="white",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_fill_ochre("lorikeet") +
custom_map_theme() +
labs(title="Arbitrary selection of South Yarra and Postal Area 3004", caption="Sources:data.gov.au, ABS")
ggsave("map1.png",p)
#get regions
riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State","Region"))
#draw contour for filtering
riverina_contour <- riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
#get rivers from OSM
riverina_bbox <- st_bbox(riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","creeks")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(riverina_contour)) %>%
st_intersection(riverina_contour)
# load dataset from github
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
# get median price by suburb
melb_price <- melb_housing %>% filter(Type=="h") %>%
group_by(Suburb) %>%
summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
#join get sf object and add median prices
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_price,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
#plot
p<-  Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical") +
scale_fill_gradient2(name="Median Price",labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(title="Median House Price in Melbourne's Housing Kaggle Dataset", caption="Sources:data.gov.au (map), Github (data)")
ggsave("map3.png",p)
