vic <- st_read(here("data-raw","2016_Victoria.gpkg"),query="SELECT * FROM '2016_Victoria' WHERE UCL_NAME_2021='Melbourne'")
vic <- st_read(here("data-raw","2016_Victoria.gpkg"),query="SELECT * FROM '2016_Victoria' WHERE UCL_NAME_2016='Melbourne'")
aussiemaps_file <- "CED_CODE_2021"
refresh=getOption("aussiemaps_refresh", FALSE)
aussiemaps_type=NULL
force=FALSE
obj <- NULL
if (Sys.getenv("aussiemaps_cache_dir") != "") {
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir <- path.expand(cache_dir)
} else {
cache_dir <- manage_cache_dir(path("aussiemaps"))
}
#' @param path The full path to the desired cache directory
#' @importFrom utils read.table write.table
#' @noRd
#' @examples \dontrun{
#' # Set the cache directory
#' cache_dir('PATH TO MY NEW CACHE DIRECTORY')
#'
#' # Check to see if it has been set correctly
#' Sys.getenv('aussiemaps_cache_dir')
#' }
manage_maps_cache_dir <- function(path) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if(!dir.exists(path)){
dir.create(path,recursive = TRUE)
}
if (!file.exists(renv)) {
file.create(renv)
}
check <- readLines(renv)
if (isTRUE(any(grepl('aussiemaps_cache_dir', check)))) {
oldenv <- read.table(renv,sep="=",stringsAsFactors = FALSE)
newenv <- oldenv[!grepl('aussiemaps_cache_dir', oldenv$V1), ]
write.table(newenv, renv, quote = FALSE, sep = "=",
col.names = FALSE, row.names = FALSE)
}
var <- paste0("aussiemaps_cache_dir=", "'", path, "'")
write(var, renv, sep = "\n", append = TRUE)
message(sprintf("Your new cache directory is %s. \nTo use now, restart R or run `readRenviron('~/.Renviron')`", path))
}
if (Sys.getenv("aussiemaps_cache_dir") != "") {
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir <- path.expand(cache_dir)
} else {
cache_dir <- manage_cache_dir(path("aussiemaps"))
}
if (Sys.getenv("aussiemaps_cache_dir") != "") {
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir <- path.expand(cache_dir)
} else {
cache_dir <- manage_maps_cache_dir(path("aussiemaps"))
}
library(fs)
if (Sys.getenv("aussiemaps_cache_dir") != "") {
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir <- path.expand(cache_dir)
} else {
cache_dir <- manage_maps_cache_dir(path("aussiemaps"))
}
readRenviron('~/.Renviron')
file_loc <- file.path(cache_dir, str_c(aussiemaps_file,".zip"))
library(tidyverse)
file_loc <- file.path(cache_dir, str_c(aussiemaps_file,".zip"))
file_loc
file_loc
file_loc <- file.path(cache_dir, str_c(aussiemaps_file))
file_loc
cache_dir <- manage_maps_cache_dir(path("aussiemaps"))
cache_dir
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir <- path.expand(cache_dir)
cache_dir
cache_dir <- path.expand(cache_dir)
cache_dir
cache_dir <- Sys.getenv("aussiemaps_cache_dir")
cache_dir
file_loc <- file.path(cache_dir, str_c(aussiemaps_file))
file_loc
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files_list <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")) %>% str_extract(.,"^[0-9]+"))
#create new release
pb_new_release(repo,version)
View(files_list)
# upload catalogue items ---
pb_upload(file=files_list$file,repo,version)
library(aussiemaps)
knitr::opts_chunk$set(
warning=  FALSE,
collapse = TRUE, comment = "#>", out.width = "100%",
fig.width = 7, fig.height = 4, dev = "CairoPNG", dpi = 150, fig.path = "vignettes/get-data-",
message = FALSE, warning = FALSE, error = FALSE
)
library(tidyverse)
library(auscensus)
library(auspol)
library(aussiemaps)
melbourne_by_LGA <-get_map(filters=list(GCCSA_NAME_2021="Greater Melbourne"),
aggregation = "LGA_NAME_2022",
year=2021)
melbourne_by_LGA <-get_map(filters=list(GCCSA_NAME_2021="Greater Melbourne"),
aggregation = "LGA_NAME_2022",
year=2021)
sydney_by_postcode %>%ggplot()+ geom_sf(fill="blue
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue")
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue")
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
i<-1
melbourne_by_LGA[i,] |> st_drop_geometry() |> pull(area)
melbourne_by_LGA[i,] |> sf::st_drop_geometry() |> pull(area)
melbourne_by_LGA[i,] |> sf::st_drop_geometry()
melbourne_by_LGA[i,] |> st_area()
melbourne_by_LGA[i,] |> sf::st_area()
area <- melbourne_by_LGA[i,] |> sf::st_area()
area_threshold <- area*.1
area_threshold
area
area_threshold <- area*.05
install.packages("smoothr")
melbourne_by_LGA[i,] |> smoothr::drop_crumbs(threshold = area_threshold)
b<- melbourne_by_LGA[i,] |> smoothr::drop_crumbs(threshold = area_threshold)
melbourne_by_LGA[i,] <- melbourne_by_LGA[i,] |> smoothr::drop_crumbs(threshold = area_threshold)
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
for(i in 1:nrow(melbourne_by_LGA)){
area <- melbourne_by_LGA[i,] |> sf::st_area()
area_threshold <- area*.05
melbourne_by_LGA[i,] <- melbourne_by_LGA[i,] |> smoothr::drop_crumbs(threshold = area_threshold)
}
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
for(i in 1:nrow(melbourne_by_LGA)){
area <- melbourne_by_LGA[i,] |> sf::st_area()
area_threshold <- area*.1
melbourne_by_LGA[i,] <- melbourne_by_LGA[i,] |> smoothr::drop_crumbs(threshold = area_threshold)
}
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_combine(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_combine(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_union(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_boundary(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_convex_hull(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
melbourne_by_LGA <-get_map(filters=list(GCCSA_NAME_2021="Greater Melbourne"),
aggregation = "LGA_NAME_2022",
year=2021)
melbourne_by_LGA <-get_map(filters=list(GCCSA_NAME_2021="Greater Melbourne"),
aggregation = "LGA_NAME_2022",
year=2021)
n <- st_convex_hull(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_buffer(melbourne_by_LGA,0)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_boundary(melbourne_by_LGA,0)
n <- st_boundary(melbourne_by_LGA)
n %>%ggplot()+ geom_sf(fill="blue") + theme_void()
n <- st_polygonize(melbourne_by_LGA)
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
melbourne_by_LGA
melbourne_by_LGA <-get_map(filters=list(LGA_NAME_2022="Greater Dandenong"),
year=2021)
melbourne_by_LGA %>%ggplot()+ geom_sf(fill="blue") + theme_void()
library(leaflet)
knitr::opts_chunk$set(
warning=  FALSE,
collapse = TRUE, comment = "#>", out.width = "100%",
fig.width = 7, fig.height = 4, dev = "CairoPNG", dpi = 150, fig.path = "vignettes/get-data-",
message = FALSE, warning = FALSE, error = FALSE
)
library(tidyverse)
library(auscensus)
library(auspol)
library(aussiemaps)
library(leaflet)
selected_filter <- list(GCCSA_NAME_2021="Greater Melbourne")
seleted_year <- "2021"
selected_year <- "2021"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
aggregations <- "LGA_NAME_2022"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
data_to_retrieve <- c("Spanish Speakers"="Persons_uses_other_language_spanish_total")
aggregations <- "LGA_NAME_2021"
aggregations <- "LGA_NAME_2022"
aggregations_2 <- "LGA_NAME_2021"
get_census_summary(census_table,aggregations_2)
?get_census_summary
data_to_retrieve <- list("Spanish Speakers"="Persons_uses_other_language_spanish_total")
data_structure
census_summary <-get_census_summary(table_number=census_table,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$LGA_CODE_2022))
census_table <"13"
data_to_retrieve <- list("Spanish Speakers"="Persons_uses_other_language_spanish_total")
census_table <-"13"
data_to_retrieve <- list("Spanish Speakers"="Persons_uses_other_language_spanish_total")
selected_filter <- list(GCCSA_NAME_2021="Greater Melbourne")
selected_year <- "2021"
aggregations <- "LGA_NAME_2022"
aggregations_2 <- "LGA_NAME_2021"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
census_summary <-get_census_summary(table_number=census_table,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$LGA_CODE_2022))
census_table
data_to_retrieve
aggregations_2
list_census_geo_types()
aggregations_2 <- "LGA"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
census_summary <-get_census_summary(table_number=census_table,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$LGA_CODE_2022))
unique(data_structure$LGA_CODE_2022)
aggregations_2
census_summary <-get_census_summary(table_number=census_table,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
get_census_data(table_number=census_table,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
?list_census_tables
list_census_tables(census_table)
?get_census_data
get_census_data(table_number=list_census_tables(census_table),
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
list_census_tables(census_table)
get_census_data(list_census_tables(census_table),
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
census_summary <-get_census_data(list_census_tables(census_table),
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
get_census_data(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
census_table
get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
unique(data_structure$LGA_CODE_2022)
get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve),
get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=str_c("LGA",unique(data_structure$LGA_CODE_2022)))
census_summary
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
map %>%
mutate(across(any_of(aggregations), ~ str_c("LGA",.x))
)
map %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x)))
map %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code"))
map %>%
select(LGA_CODE_2022,label)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code"))
pal <- colorNumeric("viridis", NULL)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
#pal <- colorNumeric("viridis", NULL)
pal <- colorQuantile("Greens", census_summary$Value)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.4,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
#pal <- colorNumeric("viridis", NULL)
pal <- colorNumeric("Greens", census_summary$Value)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
census_table <-"13"
data_to_retrieve <- list("Spanish Speakers"="Persons_uses_other_language_spanish_total")
selected_filter <- list(LGA_NAME_2022="Cardinia")
selected_filter <- list(LGA_NAME_2022="Cardinia")
selected_year <- "2021"
aggregations <- "SA1_CODE_2022"
aggregations_2 <- "SA1"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=str_c("LGA",unique(data_structure$LGA_CODE_2022)))
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
selected_filter <- list(LGA_NAME_2022="Cardinia")
census_table <-"13"
data_to_retrieve <- list("Spanish Speakers"="Persons_uses_other_language_spanish_total")
selected_filter <- list(LGA_NAME_2022="Cardinia")
selected_year <- "2021"
aggregations <- "SA1_CODE_2022"
aggregations_2 <- "SA1"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=str_c("LGA",unique(data_structure$LGA_CODE_2022)))
aggregations <- "SA1_CODE_2021"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
et_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve)
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$SA1_CODE_2021)))
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$SA1_CODE_2021))
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
map %>%
select(LGA_CODE_2022,label) %>%
mutate(across(any_of("LGA_CODE_2022"), ~ str_c("LGA",.x))) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("LGA_CODE_2022"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
#pal <- colorNumeric("viridis", NULL)
pal <- colorNumeric("Greens", census_summary$Value)
map %>%
select(SA1_CODE_2021,label) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("SA1_CODE_2021"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map %>%
select(SA1_CODE_2021,label)
map %>%
select(SA1_CODE_2021,label=SA1_CODE_2021) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("SA1_CODE_2021"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map %>%
select(SA1_CODE_2021,label=SA1_CODE_2021)
map %>%
select(SA1_CODE_2021) %>%
mutate(label=SA1_CODE_2021) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("SA1_CODE_2021"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
selected_filter <- list(LGA_NAME_2022="Yarra Ranges")
selected_year <- "2021"
aggregations <- "SA1_CODE_2021"
aggregations_2 <- "SA1"
data_structure<- list_structure(year=selected_year,filters=selected_filter)
census_summary <-get_census_summary(table_number=census_table,
selected_years = selected_year,
geo_structure=aggregations_2,
attributes = data_to_retrieve,
geo_unit_codes=unique(data_structure$SA1_CODE_2021))
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
map <-get_map(filters=selected_filter,
aggregation = aggregations,
year=selected_year)
pal <- colorNumeric("viridis", NULL)
map %>%
select(SA1_CODE_2021) %>%
mutate(label=SA1_CODE_2021) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("SA1_CODE_2021"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
map <-get_map(filters=selected_filter,
#aggregation = aggregations,
year=selected_year)
map <-get_map(filters=selected_filter,
#aggregation = aggregations,
year=selected_year)
map %>%
select(SA1_CODE_2021) %>%
mutate(label=SA1_CODE_2021) %>%
left_join(census_summary %>% select(Census_Code,Value),
by=c("SA1_CODE_2021"="Census_Code")) %>%
leaflet() %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.6,
fillColor = ~pal(Value),
label = ~paste0(label, ": ", formatC(Value, big.mark = ","))) %>%
addLegend(pal = pal, values = ~Value, opacity = 1.0)
