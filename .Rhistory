ret <- tibble::as_tibble(ret)
stopifnot(length(names) == ncol(ret))
ret <- setNames(ret,names)
dplyr::bind_cols(x,ret)
}
sunraysia_center <- st_centroid(sunraysia) %>%
sfc_as_cols(.)
sunraysia_center <- st_centroid(sunraysia) %>%
sfc_as_cols(.) %>% as.data.frame() %>%
mutate(latlon=c(x,y)) %>% pull(latlon)
sunraysia_stations <- bomrang::sweep_for_stations(latlon=c(sunraysia_center[1,]$x,sunraysia_center[1,]$y))
View(sunraysia_stations)
sunraysia_stations <- bomrang::sweep_for_stations(latlon=c(sunraysia_center[1,]$x,sunraysia_center[1,]$y)) %>%
st_as_sf(coords = c("long", "lat"),
crs = st_crs(sunraysia), agr = "constant")
sunraysia_stations <- bomrang::sweep_for_stations(latlon=c(sunraysia_center[1,]$x,sunraysia_center[1,]$y)) %>%
st_as_sf(coords = c("long", "lat"),
crs = st_crs(sunraysia), agr = "name")
st_as_sf(sunraysia_stations,coords = c("long", "lat"),
crs = st_crs(sunraysia), agr = "name")
st_as_sf(sunraysia_stations,coords = c("lon", "lat"),crs = st_crs(sunraysia), agr = "name")
sunraysia_stations <- bomrang::sweep_for_stations(latlon=c(sunraysia_center[1,]$x,sunraysia_center[1,]$y)) %>%
st_as_sf(coords = c("lon", "lat"),crs = st_crs(sunraysia), agr = "name")
View(sunraysia_stations)
sunraysia_stations
st_covered_by(sunraysia_stations,sunraysia)
st_covered_by(sunraysia_stations,sunraysia)
x <-st_covered_by(sunraysia_stations,sunraysia)
names(x) <- sunraysia_stations$site
x[lengths(x) > 0L]
x <-x[lengths(x) > 0L]
sunraysia_stations <- sunraysia_stations %>% filter(site %in% colnames(x))
sunraysia_stations <- sunraysia_stations %>% filter(site %in% names(x))
sunraysia_stations <- bomrang::sweep_for_stations(latlon=c(sunraysia_center[1,]$x,sunraysia_center[1,]$y)) %>%
st_as_sf(coords = c("lon", "lat"),crs = st_crs(sunraysia), agr = "name")
x <-st_covered_by(sunraysia_stations,sunraysia)
names(x) <- sunraysia_stations$site
x <-x[lengths(x) > 0L]
sunraysia_stations <- sunraysia_stations %>% filter(site %in% names(x))
View(sunraysia_stations)
bomrang::get_weather_bulletin(state="nsw")
bomrang::get_weather_bulletin(state="NSW")
#load packages
if(!require(pacman)) install.packages("pacman", repos = "http://cran.us.r-project.org")
if(!require(devtools)) install.packages("devtools", repos = "http://cran.us.r-project.org")
if(!require(customthemes)) devtools::install_github("carlosyanez/customthemes")
if(!require(aussiemaps)) devtools::install_github("carlosyanez/aussiemaps")
if(!require(ochRe)) devtools::install_github("openscilabs/ochRe")
pacman::p_load("tidyverse","sf","aussiemaps","customthemes","osmdata","paletteer","ochRe")
melb_inner1 <- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3)) %>%
load_map(aggregation = "LGA")
melb_inner1.centroid <- st_centroid(melb_inner1)
melb_inner2 <- tibble(LOCALITY=c("South Yarra"),State=c("VIC")) %>%
load_map()
melb_inner3 <- tibble(POA_CODE16=c("3004"),State=c("VIC")) %>%
load_map()
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="grey",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="grey",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_color_ochre() +
custom_map_theme()
Riverina <- get_region("The Riverina") %>% load_map()
Riverina <- get_region("The Riverina") %>% load_map()
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river")) %>%
osmdata_sp()
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river")) %>%
osmdata_sf()
View(rivers)
Riverina <- get_region("The Riverina") %>% load_map(aggregation="LOCALITY")
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river")) %>%
osmdata_sf()
#load packages
if(!require(librarian)) install.packages("librarian")
librarian::shelf("tidyverse","sf","carlosyanez/aussiemaps","carlosyanez/customthemes","
osmdata","paletteer","openscilabs/ochRe","devtools")
melb_inner1 <- tibble(LGA=c("Melbourne","Port Phillip","Stonnington"),State=rep("VIC",3)) %>%
load_map(aggregation = "LGA")
melb_inner1.centroid <- st_centroid(melb_inner1)
melb_inner2 <- tibble(LOCALITY=c("South Yarra"),State=c("VIC")) %>%
load_map()
melb_inner3 <- tibble(POA_CODE16=c("3004"),State=c("VIC")) %>%
load_map()
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_color_ochre() +
custom_map_theme()
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers)
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY))
Riverina <- get_region("The Riverina") %>% load_map(aggregation="LOCALITY")
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river")) %>%
osmdata_sf()
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers$osm_lines)
rivers$osm_lines
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers$osm_lines, aes(colour=name))
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers$osm_lines, aes(colour=name)) +
theme(legend. title = element_blank())
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers$osm_lines, aes(colour=name)) +
theme(legend.title = element_blank())
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
theme(legend.title = element_blank())
View(rivers)
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
theme(legend.position = "none")
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
custom_map_theme()+
theme(legend.position = "none")
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none")
Riverina <- get_region("The Riverina") %>% load_map(aggregation="LOCALITY,LGA")
riverina_bbox <- st_bbox(Riverina)
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none")
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","LGA"))
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none")
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none") +
scale_color_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none") +
scale_color_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=melb_inner1,colour="white",size=1.2,fill="grey") +
geom_sf(data=melb_inner2,aes(fill=LOCALITY),alpha=0.8,colour="grey",size=0.8) +
geom_sf(data=melb_inner3,aes(fill=POA_CODE16),alpha=0.8,colour="grey",size=0.8) +
geom_sf_text(data = melb_inner1.centroid, aes(label = LGA), colour = "blue") +
scale_fill_ochre("lorikeet") +
custom_map_theme()
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
geom_Sf(data=rivers$osm_lines,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
geom_sf(data=rivers$osm_lines,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
geom_sf(data=rivers$osm_lines,colour="blue")+
geom_sf(data=rivers$osm_multilines,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State"))
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State"))
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "water",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines,rivers$osm_multilines)
rivers$osm_lines
rivers$osm_multilines
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("Locality","State"))
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("Locality","State"))
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "water",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "water",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=LGA)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY"))
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "water",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=LOCALITY)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
View(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal","stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
ggplot() +
geom_sf(data=Riverina, aes(fill=State)) +
geom_sf(data=rivers,colour="blue")+
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
install.packages("r2d2")
install.packages("r2d3")
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State"))
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LOCALITY","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_within(Riverina)
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_within(Riverina_contour)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#  geom_sf(data=creeks,colour="blue",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="blue",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
Riverina <- get_region("The Riverina") %>% load_map(aggregation=c("LGA","State","Region"))
Riverina_contour <- Riverina %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
riverina_bbox <- st_bbox(Riverina)
rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(riverina_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Riverina_contour)) %>%
st_intersection(Riverina_contour)
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.7) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Riverina_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
View(Riverina)
Sunraysia <- get_region("Sunraysia") %>% load_map(aggregation=c("LGA","State","Region"))
Sunraysia_contour <- Sunraysia %>%
group_by(Region) %>% summarise(.groups = "drop") %>%
clean_polygons()
sunraysia_bbox <- st_bbox(Sunraysia)
rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("river","canal")) %>%
osmdata_sf()
creeks <- rivers <- opq(sunraysia_bbox) %>%
add_osm_feature(key = "waterway",
value = c("stream")) %>%
osmdata_sf()
rivers <- rbind(rivers$osm_lines %>% select(osm_id,name),
rivers$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
creeks <- rbind(creeks$osm_lines %>% select(osm_id,name),
creeks$osm_multilines%>% select(osm_id,name)) %>%
st_transform(st_crs(Sunraysia_contour)) %>%
st_intersection(Sunraysia_contour)
ggplot() +
geom_sf(data=Sunraysia_contour, aes(fill=Region), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
#geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia_contour, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
ggplot() +
geom_sf(data=Sunraysia, aes(fill=State), colour="white", size=0.5) +
geom_sf(data=rivers,colour="blue",size=1.1)+
geom_sf(data=creeks,colour="deepskyblue1",size=0.2) +
custom_map_theme()+
#theme(legend.position = "none") +
scale_fill_ochre()
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
meb_size <- melb_housing %>% group_by(Suburb) %>% summarise(Landsize=mean(Landsize,na.rm=TRUE),.groups="drop")
View(meb_size)
View(melb_housing)
View(meb_size)
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) >%%
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) %>%
left_join(mebsize,by=c("LOCALITY"="Suburb"))
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
ggplot() +
geom_sf(data=Melbourne, aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()+
#theme(legend.position = "none") +
ggplot() +
geom_sf(data=Melbourne, aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
Melbourne %>% ggplot() +
geom_sf(aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY,Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb"))
View(Melbourne)
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=Landsize), colour="white", size=0.5) +
custom_map_theme()
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(meb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
melb_size <- melb_housing %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
View(melb_housing)
melb_housing <- read_csv("https://github.com/dipalira/Melbourne-Housing-Data-Kaggle/raw/master/Data/Melbourne_housing_FULL.csv")
melb_size <- melb_housing %>% filer(type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
melb_size <- melb_housing %>% filter(type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
melb_size <- melb_housing %>% filter(Type=="h") %>% group_by(Suburb) %>% summarise(medianprice=median(Price,na.rm=TRUE),.groups="drop")
Melbourne <- get_region("Greater Metropolitan Melbourne") %>%
load_map(aggregation=c("LOCALITY","Metro.Region")) %>%
left_join(melb_size,by=c("LOCALITY"="Suburb")) %>%
filter(Metro.Region %in% c("Inner Melbourne","Metropolitan Melbourne"))
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right")
Melbourne %>% ggplot() +
geom_sf(aes(fill=medianprice), colour="white", size=0.5) +
custom_map_theme()+
theme(legend.position = "right",
legend.direction = "vertical")
