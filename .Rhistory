map_i <- map_i |> left_join(missingPOAS,by="id") |>
mutate(POA_CODE_2021=if_else(is.na(POA_CODE_2021),postcode,POA_CODE_2021),
POA_NAME_2021=POA_CODE_2021) |>
select(-postcode)
file_gpkg <- str_c(map,".gpkg")
st_write(map_i,here("data-raw",file_gpkg),layer=map)
save_zip_gpkg(here("data-raw",file_gpkg),
here("data-raw"),
here("data-raw","processed"))
map_i$area <- st_area(map_i)
map_i <- map_i %>% st_drop_geometry()
geo_structure <- bind_rows(geo_structure,map_i)
}
}
save_zip_parquet(geo_structure,str_c(year,"_structure"),here("data-raw","processed"))
geo_cols <- c("POA_CODE_2021","POA_NAME_2021")
for(geo_col in geo_cols){
struct_i <- geo_structure %>%
filter(!is.na(area)) %>%
select(any_of(c(geo_col,"id","area"))) %>%
rename("col"=geo_col) %>%
group_by(col) %>%
mutate(sum_area = sum(area)) %>%
ungroup() %>%
mutate(prop=if_else(sum_area>units::set_units(0,m^2),
as.numeric(area/sum_area),
0)) %>%
rename(geo_col="col")
save_zip_parquet(struct_i,geo_col,here("data-raw","processed"))
}
View(geo_structure)
geo_structure |> filter(!is.na(POA_NAME_2021))
geo_structure |> filter(is.na(POA_NAME_2021))
geo_structure |> filter(is.na(POA_NAME_2021)) |> distinct(POA_NAME_2021)
geo_structure |> filter(is.na(POA_NAME_2021)) |> distinct(SAL_NAME_2021)
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")))
set.seed(123)
files <- slice_sample(files,prop=1)
#create new release
pb_new_release(repo,version)
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")))
set.seed(123)
files <- slice_sample(files,prop=1)
#create new release
#pb_new_release(repo,version)
group_size <- round(nrow(files)/6,0)
steps <- seq(1,nrow(files),by=round(nrow(files)/group_size,0))
# upload catalogue items ---
for(file in files$file){
message(file)
#files_list <- files[steps[i-1]:steps[i],]
pb_upload(file,repo,version)
#tryCatch(pb_upload(file=file,repo,version),
#         error=function(e){print(e)})
message("next")
Sys.sleep(60)
}
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")))
set.seed(123)
files <- slice_sample(files,prop=1)
#create new release
#pb_new_release(repo,version)
group_size <- round(nrow(files)/6,0)
steps <- seq(1,nrow(files),by=round(nrow(files)/group_size,0))
# upload catalogue items ---
for(file in files$file){
message(file)
#files_list <- files[steps[i-1]:steps[i],]
pb_upload(file,repo,version)
#tryCatch(pb_upload(file=file,repo,version),
#         error=function(e){print(e)})
message("next")
Sys.sleep(60)
}
library(aussiemaps)
get_map(filters=list(SAL_NAME_2021="Melbourne"),year=2021)
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
library(aussiemaps)
library(tidyverse)
library(here)
library(fs)
library(sf)
library(sf)
source(here("R","internal.R"))
source(here("R","cache_management.R"))
source(here("data-raw","aux_save.R"))
source(here("data-raw","functions.R"))
cache_dir  <- find_maps_cache()
missingPOAS <- aussiemaps::list_structure(year=2021) |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021)
postcodes <- read_csv("https://www.matthewproctor.com/Content/postcodes/australian_postcodes.csv") |>
select(postcode,locality) |>
mutate(locality=str_to_title(locality),
locality=str_squish(locality))
missingPOAS
postcodes
View(postcodes)
missingPOAS <- aussiemaps::list_structure(year=2021) |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021) |>
mutate(locality=str_to_title(locality)) |>
locality=str_squish(locality))
missingPOAS <- aussiemaps::list_structure(year=2021) |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021) |>
mutate(SAL_NAME_2021=str_to_title(SAL_NAME_2021)) |>
SAL_NAME_2021=str_squish(SAL_NAME_2021))
missingPOAS <- aussiemaps::list_structure(year=2021) |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021) |>
mutate(SAL_NAME_2021=str_to_title(SAL_NAME_2021),
SAL_NAME_2021=str_squish(SAL_NAME_2021))
missingPOAS
poas <- missingPOAS |> distinct(SAL_NAME_2021,STATE_NAME_2021) |> left_join(postcodes,
by=c("SAL_NAME_2021"="locality"))
poas
poas |> filter(is.na(postcode))
poas |> filter(is.na(postcode)) |> clipr::write_clip()
missingPOAS <- missingPOAS |>
left_join(poas,by=c("SAL_NAME_2021","STATE_NAME_2021")) |>
select(id,postcode) |>
distinct() |>
filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     2611L,
"Ku-Ring-Gai Chase",              "New South Wales",     2084L,
"Thirldene",              "New South Wales",     2347L,
"Port Stephens",              "New South Wales",     2319L,
"Palmerston City",           "Northern Territory",      830L,
"West Coast",                     "Tasmania",     7469L,
"Southwest",                     "Tasmania",     7116L,
"Schouten Island",                     "Tasmania",     7116L
)
)
missingPOAS
cache_dir  <- find_maps_cache()
missingPOAS <- aussiemaps::list_structure(year=2021) |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021) |>
mutate(SAL_NAME_2021=str_to_title(SAL_NAME_2021),
SAL_NAME_2021=str_squish(SAL_NAME_2021))
postcodes <- read_csv("https://www.matthewproctor.com/Content/postcodes/australian_postcodes.csv") |>
select(postcode,locality) |>
mutate(locality=str_to_title(locality),
locality=str_squish(locality))
poas <- missingPOAS |> distinct(SAL_NAME_2021,STATE_NAME_2021) |> left_join(postcodes,
by=c("SAL_NAME_2021"="locality"))
poas
missingPOAS |>
left_join(poas,by=c("SAL_NAME_2021","STATE_NAME_2021")) |>
select(id,postcode) |>
distinct() |>
filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     2611L,
"Ku-Ring-Gai Chase",              "New South Wales",     2084L,
"Thirldene",              "New South Wales",     2347L,
"Port Stephens",              "New South Wales",     2319L,
"Palmerston City",           "Northern Territory",      830L,
"West Coast",                     "Tasmania",     7469L,
"Southwest",                     "Tasmania",     7116L,
"Schouten Island",                     "Tasmania",     7116L
)
)
poas
poas |>   filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     2611L,
"Ku-Ring-Gai Chase",              "New South Wales",     2084L,
"Thirldene",              "New South Wales",     2347L,
"Port Stephens",              "New South Wales",     2319L,
"Palmerston City",           "Northern Territory",      830L,
"West Coast",                     "Tasmania",     7469L,
"Southwest",                     "Tasmania",     7116L,
"Schouten Island",                     "Tasmania",     7116L
)
)
poas
poas |>   filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     "2611",
"Ku-Ring-Gai Chase",              "New South Wales",     "2084",
"Thirldene",              "New South Wales",     "2347",
"Port Stephens",              "New South Wales",     "2319",
"Palmerston City",           "Northern Territory",      "0830",
"West Coast",                     "Tasmania",     "7469",
"Southwest",                     "Tasmania",     "7116",
"Schouten Island",                     "Tasmania",     "7116"
))
missingPOAS <- missingPOAS |>
left_join(poas |>   filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     "2611",
"Ku-Ring-Gai Chase",              "New South Wales",     "2084",
"Thirldene",              "New South Wales",     "2347",
"Port Stephens",              "New South Wales",     "2319",
"Palmerston City",           "Northern Territory",      "0830",
"West Coast",                     "Tasmania",     "7469",
"Southwest",                     "Tasmania",     "7116",
"Schouten Island",                     "Tasmania",     "7116"
)),
by=c("SAL_NAME_2021","STATE_NAME_2021")) |>
select(id,postcode) |>
distinct() |>
)
missingPOAS <- missingPOAS |>
left_join(poas |>   filter(!is.na(postcode)) |>
bind_rows(tibble::tribble(
~SAL_NAME_2021,               ~STATE_NAME_2021, ~postcode,
"Molonglo", "Australian Capital Territory",     "2611",
"Ku-Ring-Gai Chase",              "New South Wales",     "2084",
"Thirldene",              "New South Wales",     "2347",
"Port Stephens",              "New South Wales",     "2319",
"Palmerston City",           "Northern Territory",      "0830",
"West Coast",                     "Tasmania",     "7469",
"Southwest",                     "Tasmania",     "7116",
"Schouten Island",                     "Tasmania",     "7116"
)),
by=c("SAL_NAME_2021","STATE_NAME_2021")) |>
select(id,postcode) |>
distinct()
missingPOAS
file_regex <- str_c("[0-9]{4}_[A-Z]{1}")
repo       <- arrow::read_parquet(path(cache_dir,"repo.parquet")) |>
mutate(across(c("file_name"), ~ str_remove_all(.x,"\\.zip"))) |>
select(any_of("file_name"))                                   |>
filter(if_any(c("file_name"), ~ str_detect(.x,file_regex)))   |>
pull()
geo_structure <- NULL
for(year in c(2021)){
repo_year <- repo[str_detect(repo,as.character(year))]
for(map in repo_year){
message(map)
map_i <- load_aussiemaps_gpkg(map)
map_i <- map_i |> left_join(missingPOAS,by="id") |>
mutate(POA_CODE_2021=if_else(is.na(POA_CODE_2021),postcode,POA_CODE_2021),
POA_NAME_2021=POA_CODE_2021) |>
select(-postcode)
file_gpkg <- str_c(map,".gpkg")
st_write(map_i,here("data-raw",file_gpkg),layer=map)
save_zip_gpkg(here("data-raw",file_gpkg),
here("data-raw"),
here("data-raw","processed"))
map_i$area <- st_area(map_i)
map_i <- map_i %>% st_drop_geometry()
geo_structure <- bind_rows(geo_structure,map_i)
}
}
for(year in c(2021)){
repo_year <- repo[str_detect(repo,as.character(year))]
for(map in repo_year){
message(map)
map_i <- load_aussiemaps_gpkg(map)
map_i <- map_i |> left_join(missingPOAS,by="id") |>
mutate(POA_CODE_2021=if_else(is.na(POA_CODE_2021),postcode,POA_CODE_2021),
POA_NAME_2021=POA_CODE_2021) |>
select(-postcode)
file_gpkg <- str_c(map,".gpkg")
st_write(map_i,here("data-raw",file_gpkg),layer=map)
save_zip_gpkg(here("data-raw",file_gpkg),
here("data-raw"),
here("data-raw","processed"))
map_i$area <- st_area(map_i)
map_i <- map_i %>% st_drop_geometry()
geo_structure <- bind_rows(geo_structure,map_i)
}
}
save_zip_parquet(geo_structure,str_c(year,"_structure"),here("data-raw","processed"))
geo_structure <- NULL
for(year in c(2021)){
repo_year <- repo[str_detect(repo,as.character(year))]
for(map in repo_year){
message(map)
map_i <- load_aussiemaps_gpkg(map)
map_i <- map_i |> left_join(missingPOAS,by="id") |>
mutate(POA_CODE_2021=if_else(is.na(POA_CODE_2021),postcode,POA_CODE_2021),
POA_NAME_2021=POA_CODE_2021) |>
select(-postcode)
file_gpkg <- str_c(map,".gpkg")
st_write(map_i,here("data-raw",file_gpkg),layer=map)
save_zip_gpkg(here("data-raw",file_gpkg),
here("data-raw"),
here("data-raw","processed"))
map_i$area <- st_area(map_i)
map_i <- map_i %>% st_drop_geometry()
geo_structure <- bind_rows(geo_structure,map_i)
}
}
geo_structure <- NULL
for(year in c(2021)){
repo_year <- repo[str_detect(repo,as.character(year))]
for(map in repo_year){
message(map)
map_i <- load_aussiemaps_gpkg(map)
map_i <- map_i |> left_join(missingPOAS,by="id") |>
mutate(POA_CODE_2021=if_else(is.na(POA_CODE_2021),postcode,POA_CODE_2021),
POA_NAME_2021=POA_CODE_2021) |>
select(-postcode)
file_gpkg <- str_c(map,".gpkg")
st_write(map_i,here("data-raw",file_gpkg),layer=map)
save_zip_gpkg(here("data-raw",file_gpkg),
here("data-raw"),
here("data-raw","processed"))
map_i$area <- st_area(map_i)
map_i <- map_i %>% st_drop_geometry()
geo_structure <- bind_rows(geo_structure,map_i)
}
}
geo_structure
save_zip_parquet(geo_structure,str_c(year,"_structure"),here("data-raw","processed"))
geo_cols <- c("POA_CODE_2021","POA_NAME_2021")
for(geo_col in geo_cols){
struct_i <- geo_structure %>%
filter(!is.na(area)) %>%
select(any_of(c(geo_col,"id","area"))) %>%
rename("col"=geo_col) %>%
group_by(col) %>%
mutate(sum_area = sum(area)) %>%
ungroup() %>%
mutate(prop=if_else(sum_area>units::set_units(0,m^2),
as.numeric(area/sum_area),
0)) %>%
rename(geo_col="col")
save_zip_parquet(struct_i,geo_col,here("data-raw","processed"))
}
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")))
set.seed(123)
files <- slice_sample(files,prop=1)
#create new release
#pb_new_release(repo,version)
group_size <- round(nrow(files)/6,0)
steps <- seq(1,nrow(files),by=round(nrow(files)/group_size,0))
# upload catalogue items ---
for(file in files$file){
message(file)
#files_list <- files[steps[i-1]:steps[i],]
pb_upload(file,repo,version)
#tryCatch(pb_upload(file=file,repo,version),
#         error=function(e){print(e)})
message("next")
Sys.sleep(60)
}
# setup, aux ----
library(here)
library(fs)
library(sf)
library(tidyverse)
library(arrow)
library(sfarrow)
library(progressr)
library(auspol)
handlers(global = TRUE)
source(here("data-raw","functions.R"))
main        <- here("data-raw","source","ASGS_2021_Main_Structure_GDA2020.gpkg")
nonabs      <- here("data-raw","source","ASGS_Ed3_Non_ABS_Structures_GDA2020_updated_2022.gpkg")
indigenous  <- here("data-raw","source","ASGS_Ed3_2021_Indigenous_Structure_GDA2020.gpkg")
other       <- here("data-raw","source","ASGS_2021_SUA_UCL_SOS_SOSR_GPKG_GDA2020.gpkg")
main_layers       <- rgdal::ogrListLayers(main)
nonabs_layers     <- rgdal::ogrListLayers(nonabs)
indigenous_layers <- rgdal::ogrListLayers(indigenous)
other_layers      <- rgdal::ogrListLayers(other)
temp_file <- here("data-raw","temp_df.parquet")
base_file <- here("data-raw","base_sf3.parquet")
ced_file <- here("data-raw","source","divisions-Aug-2021-by-2016-SA1")
keep_vars <- c(ls(),"keep_vars")
state       <- "Victoria"
state_short <- "Vic"
ceds_2018 <- list_divisions(filters=list(StateAb="VIC",`2022`=TRUE)) %>% pull(DivisionNm)
poas_state <- 3000:3999
source(here("data-raw","2021","sequence_2021.R"))
rm(list=ls()[!(ls() %in% keep_vars)])
library(aussiemaps)
library(fs)
library(here)
library(tidyverse)
vic <-
a
vic <- st_read(here("data-raw","2021_Victoria.gkpg"))
vic <- st_read(here("data-raw","2021_Victoria.gpkg"))
?st_read
vic <- st_read(here("data-raw","2021_Victoria.gpkg"),quiet=TRUE)
vic <- vic |> mutate(id=str_c(id,"-",STATE_CODE_2021))
vic |>
st_drop_geometry() |>
filter(is.na(POA_NAME_2021))
missingPOAS <- vic |>
st_drop_geometry() |>
filter(is.na(POA_NAME_2021)) |>
filter(area >units::set_units(0,"m^2")) |>
select(id,SAL_NAME_2021,STATE_NAME_2021) |>
mutate(SAL_NAME_2021=str_to_title(SAL_NAME_2021),
SAL_NAME_2021=str_squish(SAL_NAME_2021))
missingPOAS <- vic |>
st_drop_geometry() |>
filter(is.na(POA_NAME_2021))
vic_structure <- vic |> st_drop_geometry()
structure <- list_structure(year=2021)
structure <- list_structure(year=2021) |>
filter(STATE_CODE_2021!="2")
vic_structure <- vic
vic_structure$area <- st_area(vic_structure)
vic_file <- here("data-raw","2021_Victoria.gpkg")
vic_structure <- vic_structure |> st_drop_geometry()
structure <- list_structure(year=2021) |>
filter(STATE_CODE_2021!="2") |>
bind_rows(vic_structure)
file_delete(vic_file)
source(here("R","internal.R"))
source(here("R","cache_management.R"))
source(here("data-raw","aux_save.R"))
source(here("data-raw","functions.R"))
st_write(vic,here("data-raw",vic_file),layer="2021_Victoria")
vic
st_write(vic,vic_file,layer="2021_Victoria")
save_zip_gpkg(vic_file,
here("data-raw"),
here("data-raw","processed"))
save_zip_parquet(structure,str_c("2021_structure"),here("data-raw","processed"))
geo_cols <- colnames(vic)
geo_cols
geo_cols <- colnames(structure)
geo_cols
geo_cols <- geo_cols[str_detect(geo_cols,"CODE")]
geo_cols
geo_cols <- c(geo_cols[str_detect(geo_cols,"CODE")],"POA_NAME_2021")
for(geo_col in geo_cols){
struct_i <- structure %>%
filter(!is.na(area)) %>%
select(any_of(c(geo_col,"id","area"))) %>%
rename("col"=geo_col) %>%
group_by(col) %>%
mutate(sum_area = sum(area)) %>%
ungroup() %>%
mutate(prop=if_else(sum_area>units::set_units(0,m^2),
as.numeric(area/sum_area),
0)) %>%
rename(geo_col="col")
save_zip_parquet(struct_i,geo_col,here("data-raw","processed"))
}
library(piggyback)
library(here)
library(fs)
library(tidyverse)
files_dir      <- here("data-raw","processed")
repo           <- "carlosyanez/aussiemaps"
version       <- "data"
files <- tibble(file=dir_ls(files_dir),
Year=str_remove(file,str_c(files_dir,"/")))
set.seed(123)
files <- slice_sample(files,prop=1)
#create new release
#pb_new_release(repo,version)
group_size <- round(nrow(files)/6,0)
steps <- seq(1,nrow(files),by=round(nrow(files)/group_size,0))
# upload catalogue items ---
for(file in files$file){
message(file)
#files_list <- files[steps[i-1]:steps[i],]
pb_upload(file,repo,version)
#tryCatch(pb_upload(file=file,repo,version),
#         error=function(e){print(e)})
message("next")
Sys.sleep(60)
}
